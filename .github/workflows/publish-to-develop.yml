name: Publish to develop
on:
  workflow_run:
    workflows: [Test and build]
    types:
      - completed
    branches: [develop]
jobs:
  publish-to-develop:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: 'https://registry.npmjs.org'
      - name: 'Download artifact'
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
               owner: context.repo.owner,
               repo: context.repo.repo,
               run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "bundle"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
               owner: context.repo.owner,
               repo: context.repo.repo,
               artifact_id: matchArtifact.id,
               archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/bundle.zip`, Buffer.from(download.data));
      - name: 'Unzip artifact'
        run: unzip bundle.zip
      - name: Remove artifact
        run: rm -rf bundle.zip
      - name: get-npm-version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1
      - name: Setup env
        run: |
          echo "GITHUB_SHA_SHORT=$(echo ${{ github.event.workflow_run.head_commit.id }} | cut -c -9)" >> $GITHUB_ENV
          echo "CURRENT_DATE=$(date +%Y%m%d)" >> $GITHUB_ENV
      - name: Update package.json version
        run: npm pkg set version=${{ steps.package-version.outputs.current-version }}-dev-${{ env.GITHUB_SHA_SHORT }}-${{ env.CURRENT_DATE }}
      - name: Delete scripts.prepare
        run: npm pkg delete scripts.prepare
      - run: npm publish --tag=dev 
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
